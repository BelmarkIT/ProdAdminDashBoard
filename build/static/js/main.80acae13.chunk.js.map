{"version":3,"sources":["components/Nav/Drawer.jsx","components/Nav/Header.jsx","components/StatBoxes/StatBox.jsx","components/StatBoxes/StatBoxesSection.jsx","components/Graphs/LineGraph.jsx","components/Graphs/BarGraph.jsx","components/Graphs/GraphSection.jsx","components/No Data/GetDataSection.jsx","components/SpecDashboard.jsx","components/OverviewDashboard.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","linksContainer","display","minWidth","padding","link","color","Drawer","isOpen","toggleDrawer","classes","SwipeableDrawer","anchor","open","onClose","onOpen","className","to","root","flexGrow","menuButton","marginRight","spacing","title","Header","useState","setIsOpen","openOrClose","event","type","key","AppBar","position","Toolbar","IconButton","edge","aria-label","onClick","Typography","variant","StatBox","data","box","borderRadius","background","palette","secondary","main","statBoxSection","gridTemplateColumns","justifyItems","margin","StatBoxesSection","dashboard","boxesToDisplay","field","id","map","boxData","chartContainer","width","height","paddingBottom","chartTile","lineChart","LineGraph","name","uv","pv","amt","dataKey","tick","fill","strokeDasharray","stroke","activeDot","r","barChart","BarGraph","graphSection","GraphSection","graphsToShow","graphType","graph","controlContainer","formControl","selectEmpty","marginTop","GetDataSection","setData","materialNum","stockWidth","setStockWidth","stockWidthOpts","useEffect","a","getDropDowns","FormControl","TextField","label","value","InputLabel","htmlFor","Select","native","onChange","e","target","inputProps","disabled","SpecDashboard","displayData","setDisplayData","OverviewDashboard","createMuiTheme","primary","dark","light","textAlign","minHeight","App","Paper","ThemeProvider","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.80acae13.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tlinksContainer: {\r\n\t\tdisplay: 'grid',\r\n\t\tminWidth: 250,\r\n\t\tpadding: '1rem',\r\n\t},\r\n\tlink: {\r\n\t\t//textDecoration: 'none',\r\n\t\tcolor: '#fff',\r\n\t},\r\n}));\r\n\r\nconst Drawer = ({ isOpen, toggleDrawer }) => {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<SwipeableDrawer\r\n\t\t\tanchor={'left'}\r\n\t\t\topen={isOpen}\r\n\t\t\tonClose={toggleDrawer(false)}\r\n\t\t\tonOpen={toggleDrawer(true)}\r\n\t\t>\r\n\t\t\t<div className={classes.linksContainer}>\r\n\t\t\t\t<Link className={classes.link} to='/Belmark/ProdAdminDashBoard/'>\r\n\t\t\t\t\tOverview\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link className={classes.link} to='/Belmark/ProdAdminDashBoard/Spec'>\r\n\t\t\t\t\tSpec Specific\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</SwipeableDrawer>\r\n\t);\r\n};\r\n\r\nexport default Drawer;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport Drawer from './Drawer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2),\r\n\t},\r\n\ttitle: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n}));\r\n\r\nconst Header = ({ title }) => {\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\r\n\tconst toggleDrawer = (openOrClose) => (event) => {\r\n\t\tif (\r\n\t\t\tevent &&\r\n\t\t\tevent.type === 'keydown' &&\r\n\t\t\t(event.key === 'Tab' || event.key === 'Shift')\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetIsOpen(openOrClose);\r\n\t};\r\n\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<AppBar position='static'>\r\n\t\t\t<Toolbar>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tedge='start'\r\n\t\t\t\t\tclassName={classes.menuButton}\r\n\t\t\t\t\tcolor='inherit'\r\n\t\t\t\t\taria-label='menu'\r\n\t\t\t\t\tonClick={toggleDrawer(true)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<Typography variant='h6' className={classes.title}>\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</Typography>\r\n\t\t\t</Toolbar>\r\n\t\t\t<Drawer isOpen={isOpen} toggleDrawer={toggleDrawer} />\r\n\t\t</AppBar>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst StatBox = ({ title, data }) => {\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\tbox: {\r\n\t\t\tpadding: '1rem',\r\n\t\t\tborderRadius: 6,\r\n\t\t\tbackground: theme.palette.secondary.main,\r\n\t\t},\r\n\t\ttitle: {\r\n\t\t\tdisplay: 'block',\r\n\t\t},\r\n\t}));\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.box}>\r\n\t\t\t<span className={classes.title}>{title}</span>\r\n\t\t\t<span>{data}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default StatBox;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport StatBox from './StatBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tstatBoxSection: {\r\n\t\tdisplay: 'grid',\r\n\t\tgridTemplateColumns: 'repeat( auto-fit, minmax(250px, 1fr) );',\r\n\t\tjustifyItems: 'center',\r\n\t\tmargin: '1rem',\r\n\t},\r\n}));\r\n\r\nconst StatBoxesSection = ({ data, dashboard }) => {\r\n\tlet boxesToDisplay = [];\r\n\r\n\tif (dashboard === 'overview') {\r\n\t\tboxesToDisplay = [\r\n\t\t\t{ title: 'Current Footage On Hand', field: 'currentFootageOnHand' },\r\n\t\t\t{ title: 'Minimum Footage On Hand', field: 'minimumFootageOnHand' },\r\n\t\t\t{ title: 'Days Left In Inventory', field: 'daysLeftInInventory' },\r\n\t\t\t{ title: 'Current Footage On Order', field: 'currentFootageOnOrder' },\r\n\t\t\t{ title: 'Current Footage Committed', field: 'currentFootageCommitted' },\r\n\t\t];\r\n\t} else if (dashboard === 'spec') {\r\n\t\tboxesToDisplay = [\r\n\t\t\t{ title: 'Total Material On Hand', field: 'totalMatlOnHand' },\r\n\t\t\t{ title: 'Total Material $ On Order', field: 'totalMatlOnOrder' },\r\n\t\t\t{ title: 'Total Material $ Committed', field: 'totalMatlCommitted' },\r\n\t\t];\r\n\t}\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<section id='StatBoxes' className={classes.statBoxSection}>\r\n\t\t\t{boxesToDisplay.map((box) => {\r\n\t\t\t\tlet boxData = 0;\r\n\t\t\t\tif (data === null) {\r\n\t\t\t\t\tboxData = 0;\r\n\t\t\t\t} else if (data[box.field] !== null) {\r\n\t\t\t\t\tboxData = data[box.field];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn <StatBox title={box.title} data={boxData} />;\r\n\t\t\t})}\r\n\r\n\t\t\t{/* <StatBox title='Current Footage On Hand:' data={currentFootageOnHand} />\r\n\t\t\t<StatBox title='Minimum Footage On Hand:' data={minimumFootageOnHand} />\r\n\t\t\t<StatBox title='Days Left In Inventory:' data={daysLeftInInventory} />\r\n\t\t\t<StatBox title='Current Footage On Order:' data={currentFootageOnOrder} />\r\n\t\t\t<StatBox\r\n\t\t\t\ttitle='Current Footage Commited:'\r\n\t\t\t\tdata={currentFootageCommited}\r\n\t\t\t/> */}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default StatBoxesSection;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst useStyles = makeStyles({\r\n  chartContainer: {\r\n    width: \"90%\",\r\n    height: 250,\r\n    paddingBottom: 30,\r\n  },\r\n  chartTile: {\r\n    color: \"#fff\",\r\n  },\r\n  lineChart: {\r\n    margin: \"auto\",\r\n  },\r\n});\r\n\r\nconst LineGraph = ({ data, title }) => {\r\n  const classes = useStyles();\r\n\r\n  if (data == null) {\r\n    data = [\r\n      { name: \"Page A\", uv: 4100, pv: 2400, amt: 2400 },\r\n      { name: \"Page B\", uv: 3000, pv: 1398, amt: 2210 },\r\n      { name: \"Page C\", uv: 2000, pv: 9800, amt: 2290 },\r\n      { name: \"Page D\", uv: 2780, pv: 3908, amt: 2000 },\r\n      { name: \"Page E\", uv: 1890, pv: 4800, amt: 2181 },\r\n      { name: \"Page F\", uv: 2390, pv: 3800, amt: 2500 },\r\n      { name: \"Page G\", uv: 3490, pv: 4300, amt: 2100 },\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <div className={classes.chartContainer}>\r\n      <h3 className={classes.chartTile}>{title}</h3>\r\n      <ResponsiveContainer>\r\n        <LineChart data={data} className={classes.lineChart}>\r\n          <XAxis dataKey=\"name\" tick={{ fill: \"#fff\" }} />\r\n          <YAxis tick={{ fill: \"#fff\" }} />\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"pv\"\r\n            stroke=\"#8884d8\"\r\n            activeDot={{ r: 8 }}\r\n          />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineGraph;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n\tBarChart,\r\n\tBar,\r\n\tXAxis,\r\n\tYAxis,\r\n\tCartesianGrid,\r\n\tTooltip,\r\n\tLegend,\r\n\tResponsiveContainer,\r\n} from 'recharts';\r\n\r\nconst useStyles = makeStyles({\r\n\tchartContainer: {\r\n\t\twidth: '90%',\r\n\t\theight: 250,\r\n\t\tpaddingBottom: 30,\r\n\t},\r\n\tchartTile: {\r\n\t\tcolor: '#fff',\r\n\t},\r\n\tbarChart: {\r\n\t\tmargin: 'auto',\r\n\t},\r\n});\r\n\r\nconst BarGraph = ({ data, title }) => {\r\n\tconst classes = useStyles();\r\n\r\n\tif (data == null) {\r\n\t\tdata = [\r\n\t\t\t{\r\n\t\t\t\tname: 'Page A',\r\n\t\t\t\tuv: 4000,\r\n\t\t\t\tpv: 2400,\r\n\t\t\t\tamt: 2400,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Page B',\r\n\t\t\t\tuv: 3000,\r\n\t\t\t\tpv: 1398,\r\n\t\t\t\tamt: 2210,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Page C',\r\n\t\t\t\tuv: 2000,\r\n\t\t\t\tpv: 9800,\r\n\t\t\t\tamt: 2290,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Page D',\r\n\t\t\t\tuv: 2780,\r\n\t\t\t\tpv: 3908,\r\n\t\t\t\tamt: 2000,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Page E',\r\n\t\t\t\tuv: 1890,\r\n\t\t\t\tpv: 4800,\r\n\t\t\t\tamt: 2181,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Page F',\r\n\t\t\t\tuv: 2390,\r\n\t\t\t\tpv: 3800,\r\n\t\t\t\tamt: 2500,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Page G',\r\n\t\t\t\tuv: 3490,\r\n\t\t\t\tpv: 4300,\r\n\t\t\t\tamt: 2100,\r\n\t\t\t},\r\n\t\t];\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.chartContainer}>\r\n\t\t\t<h3 className={classes.chartTile}>{title}</h3>\r\n\t\t\t<ResponsiveContainer>\r\n\t\t\t\t<BarChart data={data}>\r\n\t\t\t\t\t<CartesianGrid strokeDasharray='3 3' />\r\n\t\t\t\t\t<XAxis dataKey='name' tick={{ fill: '#fff' }} />\r\n\t\t\t\t\t<YAxis tick={{ fill: '#fff' }} />\r\n\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t<Legend />\r\n\t\t\t\t\t<Bar dataKey='pv' fill='#8884d8' />\r\n\t\t\t\t\t<Bar dataKey='uv' fill='#82ca9d' />\r\n\t\t\t\t</BarChart>\r\n\t\t\t</ResponsiveContainer>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BarGraph;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LineGraph from './LineGraph';\r\nimport BarGraph from './BarGraph';\r\n\r\nconst useStyles = makeStyles({\r\n\tgraphSection: {\r\n\t\tdisplay: 'grid',\r\n\t\tgridTemplateColumns: '1fr 1fr',\r\n\t\tjustifyItems: 'center',\r\n\t},\r\n});\r\n\r\nconst GraphSection = ({ data, dashboard }) => {\r\n\tconst classes = useStyles();\r\n\r\n\tlet graphsToShow = [];\r\n\r\n\tif (dashboard === 'overview') {\r\n\t\tgraphsToShow = [\r\n\t\t\t{ graphType: 'line', title: 'Dock Schedule', field: '' },\r\n\t\t\t{ graphType: 'bar', title: 'Slow Moving Inventory', field: '' },\r\n\t\t\t{ graphType: 'bar', title: 'Growth', field: '' },\r\n\t\t\t{ graphType: 'bar', title: 'Decline', field: '' },\r\n\t\t];\r\n\t} else if (dashboard === 'spec') {\r\n\t\tgraphsToShow = [\r\n\t\t\t{ graphType: 'line', title: 'Year Over Year Usage', field: '' },\r\n\t\t\t{ graphType: 'line', title: 'Expected Usage', field: '' },\r\n\t\t\t{ graphType: 'bar', title: 'Open Customer Orders', field: '' },\r\n\t\t];\r\n\t}\r\n\r\n\treturn (\r\n\t\t<section id='Graphs' className={classes.graphSection}>\r\n\t\t\t{graphsToShow.map((graph) => {\r\n\t\t\t\tif (graph.graphType === 'line') {\r\n\t\t\t\t\treturn <LineGraph title={graph.title} />;\r\n\t\t\t\t} else if (graph.graphType === 'bar') {\r\n\t\t\t\t\treturn <BarGraph title={graph.title} />;\r\n\t\t\t\t}\r\n\t\t\t})}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default GraphSection;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField, InputLabel, Select, FormControl } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontrolContainer: { display: '' },\r\n\tformControl: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tminWidth: 200,\r\n\t},\r\n\tselectEmpty: {\r\n\t\tmarginTop: theme.spacing(2),\r\n\t},\r\n}));\r\n\r\nconst GetDataSection = ({ setData }) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [materialNum, setMaterialNum] = useState('');\r\n\tconst [stockWidth, setStockWidth] = useState(null);\r\n\tconst [stockWidthOpts, setStockWidthOpts] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getDropDowns = async () => {\r\n\t\t\t// let res = await fetch('blahblahblah');\r\n\t\t};\r\n\t\tgetDropDowns();\r\n\t}, [materialNum]);\r\n\r\n\treturn (\r\n\t\t<section id='GetData'>\r\n\t\t\t<h2>Enter Material Number</h2>\r\n\t\t\t<div className={classes.controlContainer}>\r\n\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid='materialNumInput'\r\n\t\t\t\t\t\tlabel='Material #'\r\n\t\t\t\t\t\tvalue={materialNum}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormControl>\r\n\t\t\t\t<FormControl className={classes.formControl}>\r\n\t\t\t\t\t<InputLabel htmlFor='stockWidth'>Stock/Slit Width</InputLabel>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tnative\r\n\t\t\t\t\t\tvalue={stockWidth}\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tsetStockWidth(e.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\tname: 'stockWidth',\r\n\t\t\t\t\t\t\tid: 'stockWidth',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tdisabled={stockWidthOpts == null}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option aria-label='None' value='' />\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</FormControl>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default GetDataSection;\r\n","import React, { useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Header from './Nav/Header';\r\nimport StatBoxesSection from './StatBoxes/StatBoxesSection';\r\nimport GraphSection from './Graphs/GraphSection';\r\nimport GetDataSection from './No Data/GetDataSection';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {},\r\n}));\r\n\r\nconst SpecDashboard = ({ displayData, setDisplayData }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header title='Spec-Specific Dashboard' />\r\n\t\t\t<GetDataSection setDisplayData={setDisplayData} />\r\n\t\t\t<StatBoxesSection data={displayData} dashboard='spec' />\r\n\t\t\t<GraphSection data={displayData} dashboard='spec' />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SpecDashboard;\r\n","import React, { useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Header from './Nav/Header';\r\nimport StatBoxesSection from './StatBoxes/StatBoxesSection';\r\nimport GraphSection from './Graphs/GraphSection';\r\nimport GetDataSection from './No Data/GetDataSection';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {},\r\n}));\r\n\r\nconst OverviewDashboard = ({ displayData, setDisplayData }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header title='Overview' />\r\n\t\t\t<GetDataSection setDisplayData={setDisplayData} />\r\n\t\t\t<StatBoxesSection data={displayData} dashboard='overview' />\r\n\t\t\t<GraphSection data={displayData} dashboard='overview' />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default OverviewDashboard;\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nimport SpecDashboard from './components/SpecDashboard';\r\nimport OverviewDashboard from './components/OverviewDashboard';\r\n\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\ttype: 'dark',\r\n\t\tprimary: {\r\n\t\t\tmain: '#731DD8',\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: '#48A9A6',\r\n\t\t},\r\n\t\tbackground: {\r\n\t\t\tmain: '#595758',\r\n\t\t\tdark: '#595758',\r\n\t\t\tlight: '#E4DFDA',\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t// background: theme.palette.background.paper,\r\n\t\tbackground: '#424242',\r\n\t\ttextAlign: 'center',\r\n\t\tminHeight: '100vh',\r\n\t},\r\n}));\r\n\r\nfunction App() {\r\n\tconst classes = useStyles();\r\n\r\n\t// This will be a material as of right now\r\n\tconst [displayData, setDisplayData] = useState(null);\r\n\r\n\treturn (\r\n\t\t<Paper>\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t\t<Router>\r\n\t\t\t\t\t\t<Route exact path='/Belmark/ProdAdminDashBoard/Spec'>\r\n\t\t\t\t\t\t\t<SpecDashboard\r\n\t\t\t\t\t\t\t\tdisplayData={displayData}\r\n\t\t\t\t\t\t\t\tsetDisplayData={setDisplayData}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route exact path='/Belmark/ProdAdminDashBoard/'>\r\n\t\t\t\t\t\t\t<OverviewDashboard\r\n\t\t\t\t\t\t\t\tdisplayData={displayData}\r\n\t\t\t\t\t\t\t\tsetDisplayData={setDisplayData}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Router>\r\n\t\t\t\t</ThemeProvider>\r\n\t\t\t</div>\r\n\t\t</Paper>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}